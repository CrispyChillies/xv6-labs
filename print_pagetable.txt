diff --git a/kernel/defs.h b/kernel/defs.h
index a3c962b..487f4f2 100644
--- a/kernel/defs.h
+++ b/kernel/defs.h
@@ -173,6 +173,7 @@ uint64          walkaddr(pagetable_t, uint64);
 int             copyout(pagetable_t, uint64, char *, uint64);
 int             copyin(pagetable_t, char *, uint64, uint64);
 int             copyinstr(pagetable_t, char *, uint64, uint64);
+void            vmprint(pagetable_t);
 
 // plic.c
 void            plicinit(void);
diff --git a/kernel/exec.c b/kernel/exec.c
index e18bbb6..6fe3c85 100644
--- a/kernel/exec.c
+++ b/kernel/exec.c
@@ -128,6 +128,10 @@ exec(char *path, char **argv)
   p->trapframe->sp = sp; // initial stack pointer
   proc_freepagetable(oldpagetable, oldsz);
 
+  // Print page table
+  if (p->pid == 1)
+    vmprint(p->pagetable);
+
   return argc; // this ends up in a0, the first argument to main(argc, argv)
 
  bad:
diff --git a/kernel/vm.c b/kernel/vm.c
index 9f69783..c8d3d30 100644
--- a/kernel/vm.c
+++ b/kernel/vm.c
@@ -437,3 +437,39 @@ copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)
     return -1;
   }
 }
+
+// Print information of a page table and its lower level page table
+void
+print_pagetable(pagetable_t pagetable, int level)
+{
+  // print all the PTE
+  for (int i = 0; i < 512; ++i)
+  {
+    pte_t pte = pagetable[i];
+    // if this PTE is valid then we print out its info
+    if (pte & PTE_V)  
+    {
+      for (int j = 0; j <= level; ++j)
+      {
+        printf(" ..");
+      }
+      
+      // print the PTE's info
+      printf("%d: pte %p pa %p\n", i, pte, PTE2PA(pte));
+    }
+    // if this PTE is valid but neither writtable or readable or executable, then it points to another lower-level page table
+    // walk down to the lower level
+    if ((pte & PTE_V) && (pte & (PTE_R | PTE_W | PTE_X)) == 0)
+    {
+      uint64 child = PTE2PA(pte); // get the physical address of the child
+      print_pagetable((pagetable_t)child, level + 1);
+    }
+  }
+}
+
+void
+vmprint(pagetable_t pagetable)
+{
+  printf("page table %p\n", pagetable);
+  print_pagetable(pagetable, 0);
+}
\ No newline at end of file
